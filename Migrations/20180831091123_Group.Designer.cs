// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Splitwise_Backend.Models;
using System;

namespace Splitwise_Backend.Migrations
{
    [DbContext(typeof(Splitwise_BackendContext))]
    [Migration("20180831091123_Group")]
    partial class Group
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Splitwise_Backend.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryCode");

                    b.Property<string>("GroupName");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("GroupId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Splitwise_Backend.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Balance");

                    b.Property<string>("Email");

                    b.Property<int>("FirstName");

                    b.Property<int?>("GroupId");

                    b.Property<int>("LastName");

                    b.HasKey("MemberId");

                    b.HasIndex("GroupId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Splitwise_Backend.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<string>("From");

                    b.Property<int?>("GroupId");

                    b.Property<string>("To");

                    b.HasKey("PaymentId");

                    b.HasIndex("GroupId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Splitwise_Backend.Models.Picture", b =>
                {
                    b.Property<int>("Picture_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Large");

                    b.Property<string>("Medium");

                    b.Property<string>("Small");

                    b.Property<int?>("UserId");

                    b.HasKey("Picture_Id");

                    b.HasIndex("UserId");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("Splitwise_Backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Registration");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Splitwise_Backend.Models.Member", b =>
                {
                    b.HasOne("Splitwise_Backend.Models.Group")
                        .WithMany("Member")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("Splitwise_Backend.Models.Payment", b =>
                {
                    b.HasOne("Splitwise_Backend.Models.Group")
                        .WithMany("Payment")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("Splitwise_Backend.Models.Picture", b =>
                {
                    b.HasOne("Splitwise_Backend.Models.User")
                        .WithMany("Picture")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
